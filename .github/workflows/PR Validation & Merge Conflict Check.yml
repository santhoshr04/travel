name: PR Validation & Merge Conflict Check

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  check-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch PR Details
        id: fetch_pr
        run: |
          PR_URL="${{ github.event.pull_request.url }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_LINK="${{ github.event.pull_request.html_url }}"
          
          DESCRIPTION=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$PR_URL" | jq -r '.body')

          echo "$DESCRIPTION" > pr_description.txt
          CHECKED_COUNT=$(grep -o '\[x\]' pr_description.txt | wc -l)
          TOTAL_COUNT=$(grep -o '\[.\]' pr_description.txt | wc -l)

          echo "checked_count=$CHECKED_COUNT" >> $GITHUB_ENV
          echo "total_count=$TOTAL_COUNT" >> $GITHUB_ENV
          echo "pr_title=$PR_TITLE" >> $GITHUB_ENV
          echo "pr_author=$PR_AUTHOR" >> $GITHUB_ENV
          echo "pr_link=$PR_LINK" >> $GITHUB_ENV

      - name: Check Mergeability
        id: check_merge
        run: |
          PR_URL="${{ github.event.pull_request.url }}"
          MERGEABLE_STATE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$PR_URL" | jq -r '.mergeable')

          if [[ "$MERGEABLE_STATE" == "false" ]]; then
            echo "conflict=true" >> $GITHUB_ENV
          else
            echo "conflict=false" >> $GITHUB_ENV
          fi

      - name: Send PR Status to Discord
        run: |
          if [[ "${{ env.checked_count }}" -eq "${{ env.total_count }}" ]]; then
            CHECKS_STATUS="‚úÖ Checklist items are checked."
          else
            CHECKS_STATUS="‚ö†Ô∏è Some checklist items are unchecked."
          fi

          if [[ "${{ env.conflict }}" == "true" ]]; then
            COLOR=16711680
            STATUS_MESSAGE="‚ùå Merge Conflict Detected"
            MERGE_STATUS="Resolve conflicts before merging."
          else
            COLOR=65280
            STATUS_MESSAGE="‚úÖ PR is Ready for Merge"
            MERGE_STATUS="No merge conflicts found! üéâ"
          fi

          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "'"$STATUS_MESSAGE"'",
                   "description": "'"$MERGE_STATUS"'\n'"$CHECKS_STATUS"'\n\nüîó **PR:** [View PR](${{ env.pr_link }})\nüë§ **Author:** ${{ env.pr_author }}\n **Title:** ${{ env.pr_title }}",
                   "color": '"$COLOR"'
                 }]
               }' \
               ${{ secrets.DISCORD_WEBHOOK }}
