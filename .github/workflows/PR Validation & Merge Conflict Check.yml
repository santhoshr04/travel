name: PR Validation & Merge Conflict Check

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  check-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch PR Description
        id: fetch_pr
        run: |
          PR_URL="${{ github.event.pull_request.url }}"
          DESCRIPTION=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$PR_URL" | jq -r '.body')

          echo "$DESCRIPTION" > pr_description.txt
          CHECKED_COUNT=$(grep -o '\[x\]' pr_description.txt | wc -l)
          TOTAL_COUNT=$(grep -o '\[.\]' pr_description.txt | wc -l)

          echo "Checked: $CHECKED_COUNT / $TOTAL_COUNT"
          echo "checked_count=$CHECKED_COUNT" >> $GITHUB_ENV
          echo "total_count=$TOTAL_COUNT" >> $GITHUB_ENV

      - name: Check Mergeability via GitHub API
        id: check_merge
        run: |
          PR_URL="${{ github.event.pull_request.url }}"
          MERGEABLE_STATE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$PR_URL" | jq -r '.mergeable')

          echo "Mergeable State: $MERGEABLE_STATE"

          if [[ "$MERGEABLE_STATE" == "false" ]]; then
            echo "‚ùå Merge conflicts detected!"
            echo "conflict=true" >> $GITHUB_ENV
          else
            echo "‚úÖ No conflicts detected!"
            echo "conflict=false" >> $GITHUB_ENV
          fi

      - name: Send PR Status Notification to Discord
        run: |
          CHECKS_STATUS="‚úÖ **All checklist items are checked!**"
          if [[ "${{ env.checked_count }}" -lt "${{ env.total_count }}" ]]; then
            CHECKS_STATUS="‚ö†Ô∏è **Some checklist items are unchecked!**"
          fi

          if [[ "${{ env.conflict }}" == "true" ]]; then
            COLOR=16711680
            STATUS_MESSAGE="‚ùå **Merge Conflict Detected!**\nResolve conflicts before merging."
          else
            COLOR=65280
            STATUS_MESSAGE="‚úÖ **PR is Ready for Merge!**"
          fi

          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "${STATUS_MESSAGE} - ${{ github.event.pull_request.title }}",
                   "description": "**PR Author:** ${{ github.event.pull_request.user.login }}\nüîó **PR Link:** [View PR](${{ github.event.pull_request.html_url }})\n\n${CHECKS_STATUS}",
                   "color": '${COLOR}'
                 }]
               }' \
               ${{ secrets.DISCORD_WEBHOOK }}
