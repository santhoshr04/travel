name: PR Validation & Merge Conflict Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    continue-on-error: false  # Ensure failure stops execution
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history for proper merge checking

      - name: Check for Merge Conflicts
        id: conflicts
        run: |
          git fetch origin main
          git checkout -b temp-merge-check
          if ! git merge origin/main --no-commit --no-ff; then
            echo "Merge conflicts detected ‚ùå"
            echo "conflict=true" >> $GITHUB_ENV
          else
            echo "No conflicts detected ‚úÖ"
            echo "conflict=false" >> $GITHUB_ENV
          fi
          git checkout -
          git branch -D temp-merge-check

      - name: Force Failure on Merge Conflict
        if: env.conflict == 'true'
        run: exit 1

      - name: Send Merge Conflict Notification to Discord
        if: always()
        run: |
          if [[ "${{ env.conflict }}" == "true" ]]; then
            MESSAGE="‚ùå **Merge Conflicts Found!**\nResolve conflicts with \`main\` before merging."
            COLOR=16711680
          else
            MESSAGE="‚úÖ **PR is Ready for Merge**\nNo merge conflicts found! üéâ"
            COLOR=65280
          fi

          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "'"$MESSAGE"'",
                   "description": "üîó **PR:** [View PR](${{ github.event.pull_request.html_url }})\nüë§ **Author:** ${{ github.event.pull_request.user.login }}\nüìå **Title:** ${{ github.event.pull_request.title }}",
                   "color": '"$COLOR"'
                 }]
               }' \
               ${{ secrets.DISCORD_WEBHOOK }}
